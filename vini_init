echo -n "checking for user..." 
if [[ $HOME == "/root" ]]
then
    echo "Please run Vini as an ordinary user, not as a root! Exiting..."
    exit
else
    echo "passed."
    #!/bin/bash
fi

cat COPYRIGHT

NULL=0
HSA=hsa

echo "Working directory is usually fast shared filesystem. It is set to" $WORKDIR "."
read -p "Accept (y/n)?" accept
if [ $accept != "y" ]
then
    read -p "enter the name of new working directory:" newdir
    mkdir -p $HOME/$newdir
    WORKDIR=$HOME/$newdir
    echo $WORKDIR > workdir
    echo "WORKDIR changed to" $WORKDIR 
else 
    echo $WORKDIR > workdir
fi 

cd $WORKDIR #Cleanup
rm -f slurm-*.out complex_*.job ligand_*.pdbqt analysis_type cancer_type GIBBS Gibbs_values job_submit ligands_list max_therapy_level nr_complexes nr_ligands max_jobs  PYTHON_HOME job_status receptors receptors_contracted receptors_expanded relations stats target_dir therapy_level workload_manager Vina complex_???.jo* nohup.out temp_buf debuglog
cd $vini_dir

alias python=$HOME/mgltools_x86_64Linux2_1.5.6/bin/python
cp 1aki.sav $HOME/1AKI.pdb
mkdir -p ./ligands/pdb_files
mkdir -p ./genes/pdb_files

echo "hsa" > $WORKDIR/ORGANISM  #We are currently performing the analysis of homo sapiens only.
ORGANISM=`cat $WORKDIR/ORGANISM`

#read -p "which job submission system are you using? Enter 1 for SLURM, 2 for PBS/Torque, 3 for SGE:" JSS
read -p "which job submission system are you using? Enter 1 for SLURM, 2 for SGE:" JSS

case $JSS in
     1) echo "SLURM" > $WORKDIR/workload_manager; echo "squeue" > $WORKDIR/job_status; echo "sbatch" > $WORKDIR/job_submit; echo "scancel" > $WORKDIR/job_cancel ; sh prepare_SLURM_scripts ;;
     2) echo "SGE" > $WORKDIR/workload_manager;  echo "qstat" > $WORKDIR/job_status; echo "qsub" > $WORKDIR/job_submit; echo "qdel" > $WORKDIR/job_cancel; sh prepare_SGE_scripts ;;
     3) echo "PBS" > $WORKDIR/workload_manager;  echo "qstat" > $WORKDIR/job_status; echo "qsub" > $WORKDIR/job_submit; echo "qdel" > $WORKDIR/job_cancel; sh prepare_PBS_scripts ;; #needs testing!
esac

$job_status > tmp
nolines=`wc -l < tmp` 
if [ $nolines -ne $NULL ]
then
    job_cancel=`cat $WORKDIR/job_cancel` ; $job_cancel -u $USER #cancel any job remained from the previous run
fi
read -p "enter the maximum number of concurrent Autodock Vina jobs (3 cores/per job):" max_jobs
read -p "enter the maximum number of concurrent Gromacs/g_mmpbsa jobs (1 node/per job):" max_nodes

echo $max_jobs > $WORKDIR/max_jobs
echo $max_nodes > $WORKDIR/max_nodes

echo ; echo "If you never registered to SWISS-MODEL server before, stop here. Go to https://swissmodel.expasy.org/  and create account. Then enter your registration email and password here."
read -p "Allready registered (y/n)?" yesno
if  [ $yesno == "n" ]
then
    read -p "Enter email:" email
    echo -n "Enter password:"; read -s password
    echo""
    echo $email > $WORKDIR/SWISS-MODEL_email
    echo $password > $WORKDIR/SWISS-MODEL_password
    chmod g-r,o-r $WORKDIR/SWISS-MODEL_password
else
    if [ ! -e $WORKDIR/SWISS-MODEL_email ] || [ ! -e $WORKDIR/SWISS-MODEL_password ] ; then
       echo "no registration data found. You will need to enter your registration data now. "
       read -p "Enter your registration email:" email
       echo -n "Enter your registration password:"; read -s password ; echo ""
       echo $email > $WORKDIR/SWISS-MODEL_email
       echo $password > $WORKDIR/SWISS-MODEL_password
       chmod g-r,o-r $WORKDIR/SWISS-MODEL_password
    fi
fi

echo ; echo "If you never registered to Drugbank before, stop here. Go to https://go.drugbank.com/public_users/sign_up and sign-up. Upon receiving the approval, enter your registration email and password here."
read -p "Allready registered (y/n)?" yesno
if  [ $yesno == "n" ]
then
    read -p "Enter email:" email
    echo -n "Enter password:"; read -s password ; echo ""
    echo $email > $WORKDIR/Drugbank_email
    echo $password > $WORKDIR/Drugbank_password
    chmod g-r,o-r $WORKDIR/Drugbank_password
else
    if [ ! -e $WORKDIR/Drugbank_email ] || [ ! -e $WORKDIR/Drugbank_password ] ; then
       echo "no data found. You will need to enter data for the first time. "
       read -p "Enter email:" email
       echo -n "Enter password:"; read -s password ; echo ""
       echo $email > $WORKDIR/Drugbank_email
       echo $password > $WORKDIR/Drugbank_password
       chmod g-r,o-r $WORKDIR/Drugbank_password
    fi
fi

sh download_Drugbank_structures


#https://www.uniprot.org/uniprot/?query=database:(type:pdb)&format=tab&columns=id,entry%20name,reviewed,database(PDB) #uniprot PDB cross-references --> uniprot_db_new

#easy_install --user pip
#curl -O https://raw.github.com/pypa/pip/master/contrib/get-pip.py
#python get-pip.py
# https://cactus.nci.nih.gov/download/roadmap #download all PubChem compounds ?

touch -a $WORKDIR/computed_therapy_level
touch -a $WORKDIR/computed_cancer_type
computed_therapy_level=`cat $WORKDIR/computed_therapy_level`


echo -n "delete all data previously created by Vini)? (y/n)"
read erase
if  [[ $erase == "y" ]]
then
    rm -rf $WORKDIR/*_data 
    > $WORKDIR/computed_cancer_type
fi

computed_cancer_type=`cat $WORKDIR/computed_cancer_type`

echo "full" > $WORKDIR/analysis_type

curl  -s http://rest.kegg.jp/list/pathway/hsa > tmp #get all available homo sapiens pathways

cat tmp | sed "s/path:hsa//g" > pathways ; rm tmp #add SARS-CoV-2 pathway
echo "05244 SARS-CoV-2 Spike Glycoprotein" >> pathways

echo "Next will be shown the scrolling list of all pathways available for virtual drug screening ( <q> to exit )."
echo "Then choose the pathway number and press <enter>. Example: For screening collorectal cancer, enter 05210 ."
echo ""
echo "tip 1: For the cancer type not in the list, choose 05200 (Pathways in cancer)."
echo "tip 2: For screening all cancer pathways, enter <all> ."

echo "" ; read -p "Press enter to continue." cont

cat pathways | less

echo "" ; rm pathways
read -p "Please enter the pathway number:" cancer_type
echo $cancer_type > $WORKDIR/cancer_type
data="_data"

#Autogrid4 fires "Unknown receptor type: "Se, Pt, etc. ",  -- Add parameters for it to the parameter library first!"
#We must add entries from "AD4_parameters_for_metal_ions" file located in Vini source  directory to AD4_parameters.dat
#AD4_parameters.dat is located in $MGLTOOLS directory
#Copy it to the working directory : http://autodock.scripps.edu/faqs-help/faq/how-do-i-add-new-atom-types-to-autodock-4

echo -n "Checking if AD4_parameters.dat file in MGLTools needs modification..."
if [ ! -e $MGLTOOLS/AD4_parameters.dat.orig ] #enable MGLTools to work with metal ions
then
    cp $MGLTOOLS/AD4_parameters.dat $MGLTOOLS/AD4_parameters.dat.orig
    grep atom_par $vini_dir/AD4_parameters_for_metal_ions >> $MGLTOOLS/AD4_parameters.dat
    echo "parameters for metal ions added."
else
    echo "no need for modification. Parameters for metal ions are already present in AD4_parameters.dat file."
fi

cp $INSTALL_DIR/g_mmpbsa/bin/g_mmpbsa $WORKDIR

echo -n "Choose therapy level (1 for single drug therapy, 2 for two drugs therapy, 3 with three drugs therapy etc):"
read max_therapy_level
echo $max_therapy_level > $WORKDIR/max_therapy_level

DIR=$vini_dir/KEGG_cancer_pathways/$HSA$cancer_type
mkdir -p $DIR
sh download_KEGG_pathway  

sh copy_ligands_to_stage 

sh prepare_ligands  

success=`cat $WORKDIR/success`
if [[ $success == no ]]     #if pdbqt files for some drugs are not created, cont. without them
then
    mv $WORKDIR/ligands_list $vini_dir/ligands/ligands_list
    sh copy_ligands_to_stage
    sh prepare_ligands
fi

if  [[ $cancer_type == $computed_cancer_type ]]
then
    echo "Do you want to use the existing data, or let Vini compute data ab initio? (y for existing data, n for ab initio)" 
    read answer
    if [ $answer == y ]
    then
        therapy_level=`cat $WORKDIR/computed_therapy_level`
        let "therapy_level++"
    else
        therapy_level=1
        rm -rf $WORKDIR/$cancer_type$data
        rm -rf $WORKDIR/$cancer_type$data
    fi
else
    therapy_level=1
    rm -rf $WORKDIR/$cancer_type$data
fi

CANCER_PATHWAY=$ORGANISM$cancer_type                             #setting the cancer pathway
a="_results"                                                     #Create directory store for results
rm -rf $WORKDIR/$CANCER_PATHWAY$a
mkdir -p $WORKDIR/$CANCER_PATHWAY$a


cp $vini_dir/prep_prot_lig.py $WORKDIR

cd $WORKDIR
nr_ligands=`wc -l < $vini_dir/ligands/ligands_list` ; echo $nr_ligands > $WORKDIR/nr_ligands
touch $WORKDIR/debuglog


echo "Good to go. You may now start Vini in the foreground with <sh Vini> (output will be sent to the screen)"
echo "or in the background with <nohup ./Vini &> (output will be sent to nohup.out file)"
