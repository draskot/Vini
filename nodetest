partition=$1
walltime=$2



eval excluded_nodes=excluded_"$partition"_nodes
eval available_nodes=available_"$partition"_nodes

excluded_nodes=$(sinfo -dN -p ${partition} | awk '(NR>1){gsub(/[a-z]/, "", $1);print $1}')
available_nodes=$(sinfo -N -o "%N %T" -p ${partition} | awk '(NR>1) {  if($2=="mixed" || $2=="idle") { 
                                             gsub(/[a-z]/, "", $1);print $1;}
                                            else
                                                next}')

echo ${excluded_nodes} > excluded_${partition}_nodes
echo ${available_nodes} > available_${partition}_nodes

cpu_node_suffix=`sinfo -N -o "%N %T" -p ${partition} | head -2 | tail -1 | awk '{print $1}' | sed 's/[0-9]//g'`

> $WORKDIR/tmp
WORDS=`wc -w < excluded_${partition}_nodes`
echo "number of excluded compute nodes: $WORDS"
read -a WORDS -d "" < excluded_${partition}_nodes
for word in "${WORDS[@]}"
do
        node=${cpu_node_suffix}${word},
        echo -n $node >> $WORKDIR/tmp
done
cat $WORKDIR/tmp | rev | cut -c2- | rev > excluded_${partition}_nodes
echo "excluded compute nodes:"
cat excluded_${partition}_nodes

> $WORKDIR/tmp
WORDS=`wc -w < available_${partition}_nodes`
echo "number of available compute nodes: $WORDS"
read -a WORDS -d "" < available_${partition}_nodes
for word in "${WORDS[@]}"
do
        node=${cpu_node_suffix}${word},
        echo -n $node >> $WORKDIR/tmp
done
cat $WORKDIR/tmp | rev | cut -c2- | rev > available_${partition}_nodes
echo "available compute nodes:"
cat available_${partition}_nodes


groups=`groups`
groups_login_node=`echo "$groups" | wc -w`

echo "interrupted" > test_status



if [ ! -s available_${partition}_nodes ]
then
    echo "There are no available nodes in ${partition} partition. Vini will not use them."
else
    while read -r line      #counting the number of available nodes
    do
        count=${line//[^,]}
        count=`echo "${#count}"`
    done < available_${partition}_nodes
    let count++
    

    echo -e "\nTesting $partition nodes. Do not interrupt."
    sed 's/,/ /g' available_${partition}_nodes > $WORKDIR/tmp

    for node in $(<$WORKDIR/tmp)
    do
        echo "#! /bin/bash"                                   > $WORKDIR/${partition}_nodetest
        echo "#SBATCH --time=00:$walltime:00"                >> $WORKDIR/${partition}_nodetest
        echo "#SBATCH --account=$SLURMACCT"                  >> $WORKDIR/${partition}_nodetest
        echo "#SBATCH --cpus-per-task=1"                     >> $WORKDIR/${partition}_nodetest
        echo "#SBATCH --mem=1gb"                             >> $WORKDIR/${partition}_nodetest
        echo "#SBATCH --partition="$partition                >> $WORKDIR/${partition}_nodetest
        echo "#SBATCH --output=$WORKDIR/nodetest.$node.out"  >> $WORKDIR/${partition}_nodetest
        echo "#SBATCH --error=$WORKDIR/nodetest.$node.err"   >> $WORKDIR/${partition}_nodetest
        if  [[ $partition == gpu ]] && [[ -e /etc/slurm/gres.conf ]]
        then
            echo "#SBATCH --gres=gpu:0"                      >> $WORKDIR/${partition}_nodetest
        fi
        echo "groups"                                        >> $WORKDIR/${partition}_nodetest
        echo "grep MemAvailable /proc/meminfo"               >> $WORKDIR/${partition}_nodetest
        chmod u+x $WORKDIR/${partition}_nodetest
        sbatch -Q $WORKDIR/${partition}_nodetest
        echo -n "."
    done
    echo
    sh $vini_dir/wait_until_jobs_finish

    for node in $(<$WORKDIR/tmp)
    do
        groups=`head -1 $WORKDIR/nodetest.${node}.out`
        groups=`echo "$groups" | wc -w`
        if  [ $groups -eq ${groups_login_node} ]
        then
            echo -n "$node ok. " ; sleep 0.01
        else
            echo -n ,${node} >> excluded_${partition}_nodes #excluding node
            available=`cat available_${partition}_nodes`
            available=${available//${node},/}
            echo $available > available_${partition}_nodes
            echo -n "$node not ok. "
        fi
    done


    if  [ -s excluded_${partition}_nodes ]
    then
        echo ; echo -e "\nThe following ${partition} nodes are either not available or experience some problems. Will be excluded:"
        cat excluded_${partition}_nodes
    fi
fi
