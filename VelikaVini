HSA=hsa
ORGANISM=`cat $WORKDIR/ORGANISM`
cores=`cat $WORKDIR/cpu_cores`
job_submit=`cat $WORKDIR/job_submit`
cosmic=`cat $WORKDIR/cosmic`
kit=`cat $WORKDIR/kit`
prediction_model=`cat $WORKDIR/prediction_model`
max_therapy_level=`cat $WORKDIR/max_therapy_level`
compute_cell_line=`cat $WORKDIR/compute_cell_line`
NCI60=`cat $WORKDIR/validate_NCI-60_data`

TRUE=1
FALSE=0
ONES=1

> $WORKDIR/missing_genes

if  [ $compute_cell_line -eq $TRUE ]
then
    cell_line=`cat $WORKDIR/cell_line`
fi

data="_data"
mkdir -p $vini_dir/database/KEGG_cancer_pathways

cancer_type=`cat $WORKDIR/cancer_type`          #getting cancer type from the preproc script
grep $cancer_type $vini_dir/database/cross_references > tmp
line=`cat tmp`
tissue=`echo $line | awk '{print $2}'`
CANCER_PATHWAY=$ORGANISM$cancer_type
mkdir -p $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY
sh download_KEGG_pathway

echo "Processing" $CANCER_PATHWAY "metabolic pathway" 
start_date=`date`
echo "Analysis started at ${start_date} "
rm -f $WORKDIR/END

sh $vini_dir/predict_biotech_drug_structures
sh $vini_dir/create_relations_receptors_files #create KEGG receptor structures
sh $vini_dir/create_receptor_structures
echo "Waiting for prediction jobs to finish. This may take a while."
sh $vini_dir/wait_until_jobs_finish
sh $vini_dir/check_predicted_structures
if  [[ -s $WORKDIR/failed_drug_predicted_structures ]] || [[ -s $WORKDIR/failed_gene_predicted_structures ]]
then
    echo "Following structure(s) were not predicted:"
    cat $WORKDIR/failed_drug_predicted_structures
    cat $WORKDIR/failed_gene_predicted_structures
    echo "You may try to use Swiss-Model instead."
    echo "Exiting." ; exit
fi

if  [ -s $WORKDIR/missing_genes ]
then
    echo "Cannot continue as the following KEGG genes are missing entry in Uniprot:"
    cat $WORKDIR/missing_genes
    echo "Find their fasta sequences at https://www.ncbi.nlm.nih.gov/ and predict their structures."
    echo "Then upload structures to $vini_dir/database/genes/pdb_files directory and start Vini again."
fi

if  [ -s $WORKDIR/failed_pubchem_structures ]
then
    echo "Cannot continue as Openbabel failed sdf to pdb conversion for the following KEGG substances:"
    cat $WORKDIR/failed_pubchem_structures              
    echo "You may try convert them with Cactus server: https://cactus.nci.nih.gov/translate/"
    echo "Then upload these strucures to $vini_dir/database/genes/pdb_file directory and start Vini again."
    echo "Exiting." ; exit
fi

if  [[ -s $WORKDIR/missing_genes ]] || [[ -s $WORKDIR/failed_pubchem_structures ]] 
then
    echo " Exiting." ; exit
fi
      
rm -f $vini_dir/genes/cosmic_ids.csv
rm -f $vini_dir/genes/expressions/* $vini_dir/genes/mutations/* $vini_dir/genes/sequences/* 

echo -n "Activating miniconda3 environment..."
source $INSTALL/miniconda3/bin/activate
conda activate env310
echo "done."

if  [ $compute_cell_line -eq $FALSE ]     #then we analyse public data
then
    if [ $cosmic == y ]
    then
        if  [ ! -e $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/expression_scores.csv ] #get expressions
        then
            sh get_gene_expressions_from_CosmicDB ${cores}
            $job_submit $WORKDIR/genex
            sh wait_until_jobs_finish ; rm $WORKDIR/genex.out
            cp $vini_dir/database/genes/expression_scores.csv $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY
        else
            cp $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/expression_scores.csv $vini_dir/database/genes
        fi
        if  [ ! -d $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/mutations ] #get mutations/sequences
        then
            mkdir -p $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/mutations
            mkdir -p $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/sequences
            sh get_gene_mutations_from_CosmicDB
            #python generateMutatedFASTAseq.py #IN ERROR!
            cp $vini_dir/database/genes/mutations/* $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/mutations
            cp $vini_dir/database/genes/sequences/* $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/sequences
        else
            rm -f $vini_dir/database/genes/mutations/* $vini_dir/database/genes/sequences/*
            cp $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/mutations/* $vini_dir/database/genes/mutations
            cp $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/sequences/* $vini_dir/database/genes/sequences
        fi
    fi
    sh add_expressions_to_receptors
    sh add_expressions_to_relations
else
    echo "cell line is ${cell_line} "
    cp $vini_dir/database/NCI-60_cell_lines/$cell_line/expressions/${cell_line}.csv $vini_dir/genes/expressions #getting cell line expression file from COSMIC via API does not work, we are downloading it manually
    echo "Converting Uniprot IDs for ${cell_line} cell line to Cosmic gene IDs and calculating their average Z-score expressions..."
    rm -f $vini_dir/genes/cosmic_ids.csv

    echo -n "Activating miniconda3 environment..."
    source $INSTALL/miniconda3/bin/activate
    conda activate env310
    echo "done."
    python3 calculate_gene_expression_cell_line.py -g ./genes/Uniprot_ID_list -t ${cell_line}

    echo -n "Downloading  gene mutations for ${cell_line} cell line from Cosmic. Please wait."
    rm -f $vini_dir/genes/cosmic_ids.csv
    python3 get_gene_mutation_cell_line.py -g ./genes/Uniprot_ID_list -c $cell_line
    echo "brakepoint" ; sleep 1000
    
    if  [ ! -e $vini_dir/genes/mutations/${cell_line}_mutations.csv ]
    then
        echo "failed to download mutations from Cosmic! Vini will stop now." exit
    else
        echo "success."
    fi

    echo -n "Generating  mutated fasta sequences for ${cell_line} cell line. Please wait."

    python3 generateMutatedFASTAseqCellLine.py -g ./genes/Uniprot_ID_list
        
    ls $vini_dir/genes/sequences > tmp
    if  [ ! -s tmp ]
    then
        echo "failed to get any sequence." ; exit
    fi

    if  [ $cosmic == y ]
    then
        sh predict_mutated_proteins ${cell_line}
    fi

    echo -n "Adding gene expressions to receptors and relations..."
    sh add_cell_expressions_to_receptors
    sh add_expressions_to_relations
    echo "done."
fi

conda deactivate

if [ $kit == y ]
then
    while read -r line
    do
        uniprotID=`echo $line | awk '{print $2}'`
        expression=`echo $line | awk '{print $3}'`
        echo $uniprotID
        echo $expression
        grep $uniprotID $WORKDIR/receptors_contracted > tmp
        if [ -s tmp ]
        then
            echo "gene found"
        else
            echo "gene not found" 
        fi
    done < $vini_dir/database/genes/custom_genes
fi

sh copy_genes_to_stage              #Copy pdb receptor files to the stage
drugtype=`cat $WORKDIR/drugtype`
if [ $drugtype == small ] ; then #create receptor pdbqt files
   echo "Preparing pdbqt files for Vina docking. Please wait, may take a while."
   sh $vini_dir/create_receptor_pdbqt_files
fi

complexes=`wc -l $WORKDIR/receptors_contracted | awk '{ print $1 }'`
echo $complexes > $WORKDIR/complexes

for (( therapy_level=1; therapy_level<$((max_therapy_level+1)); therapy_level++ ))
do
    echo $therapy_level > $WORKDIR/therapy_level
    sh $vini_dir/malavini
done

if  [[ ${compute_cell_line} -eq $TRUE ]] && [[ ${max_therapy_level} -eq $ONES ]]    #prepare the data for Pearson analysis
then 
    if  [ $NCI60 == yes ]
    then
        echo "Validating results against NCI-60 data..."
        sh $vini_dir/validate_cell_line
    fi
fi

end_date=`date`
echo "Analysis completed at"  $end_date
