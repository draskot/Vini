HSA=hsa
ORGANISM=`cat $WORKDIR/ORGANISM`
cores=`cat $WORKDIR/cpu_cores`
job_submit=`cat $WORKDIR/job_submit`
compute_cell_line=`cat $WORKDIR/compute_cell_line`
cosmic=`cat $WORKDIR/cosmic`
kit=`cat $WORKDIR/kit`
prediction_model=`cat $WORKDIR/prediction_model`

TRUE=1
FALSE=0

> $WORKDIR/missing_genes

if  [ $compute_cell_line -eq $TRUE ]
then
    cell_line=`cat $WORKDIR/cell_line`
fi

data="_data"
mkdir -p $vini_dir/database/KEGG_cancer_pathways

cancer_type=`cat $WORKDIR/cancer_type`          #getting cancer type from the preproc script
grep $cancer_type $vini_dir/database/cross_references > tmp
line=`cat tmp`
tissue=`echo $line | awk '{print $2}'`
CANCER_PATHWAY=$ORGANISM$cancer_type
mkdir -p $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY
sh download_KEGG_pathway

echo "Processing" $CANCER_PATHWAY "metabolic pathway" 
start_date=`date`
echo "Analysis of therapy level " $therapy_level "started at" $start_date
rm -f $WORKDIR/END

therapy_level=`cat $WORKDIR/therapy_level`
if  [ $therapy_level -eq 1 ]
then
    sh $vini_dir/predict_biotech_drug_structures
    sh $vini_dir/create_relations_receptors_files #create KEGG receptor structures
    sh $vini_dir/create_receptor_structures
    echo "Waiting for prediction jobs to finish. This may take a while."
    sh $vini_dir/wait_until_jobs_finish
    sh $vini_dir/check_predicted_structures
    if  [[ -s $WORKDIR/failed_drug_predicted_structures ]] || [[ -s $WORKDIR/failed_gene_predicted_structures ]]
    then
        echo "Following structure(s) were not predicted:"
        cat $WORKDIR/failed_drug_predicted_structures
        cat $WORKDIR/failed_gene_predicted_structures
        echo "You may try to use Swiss-Model instead."
        echo "Exiting." ; exit
    fi

    if  [ -s $WORKDIR/missing_genes ]
    then
        echo "Cannot continue as the following KEGG genes are missing entry in Uniprot:"
        cat $WORKDIR/missing_genes
        echo "Find their fasta sequences at https://www.ncbi.nlm.nih.gov/ and predict their structures."
        echo "Then upload structures to $vini_dir/database/genes/pdb_files directory and start Vini again."
    fi

    if  [ -s $WORKDIR/failed_pubchem_structures ]
    then
        echo "Cannot continue as Openbabel failed sdf to pdb conversion for the following KEGG substances:"
        cat $WORKDIR/failed_pubchem_structures              
        echo "You may try convert them with Cactus server: https://cactus.nci.nih.gov/translate/"
        echo "Then upload these strucures to $vini_dir/database/genes/pdb_file directory and start Vini again."
        echo "Exiting." ; exit
    fi

    if  [[ -s $WORKDIR/missing_genes ]] || [[ -s $WORKDIR/failed_pubchem_structures ]] 
    then
        echo " Exiting." ; exit
    fi
      
    echo -n "Activating miniconda environment..."
    source $INSTALL/miniconda2/bin/activate
    conda activate env27
    echo "done."
    if  [ $compute_cell_line -eq $FALSE ]     #then we analyse public data
    then
        if [ $cosmic == y ]
        then
            if  [ ! -e $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/expression_scores.csv ] #get expressions
            then
                sh get_gene_expressions_from_CosmicDB ${cores}
                $job_submit $WORKDIR/genex
                sh wait_until_jobs_finish ; rm $WORKDIR/genex.out
                cp $vini_dir/database/genes/expression_scores.csv $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY
            else
                cp $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/expression_scores.csv $vini_dir/database/genes
            fi
            if  [ ! -d $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/mutations ] #get mutations/sequences
            then
                mkdir -p $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/mutations
                mkdir -p $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/sequences
                sh get_gene_mutations_from_CosmicDB
                #python generateMutatedFASTAseq.py #IN ERROR!
                cp $vini_dir/database/genes/mutations/* $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/mutations
                cp $vini_dir/database/genes/sequences/* $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/sequences
            else
                rm -f $vini_dir/database/genes/mutations/* $vini_dir/database/genes/sequences/*
                cp $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/mutations/* $vini_dir/database/genes/mutations
                cp $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/sequences/* $vini_dir/database/genes/sequences
            fi
        fi
        sh add_expressions_to_receptors
        sh add_expressions_to_relations
    else
        echo "cell line is ${cell_line} "
        echo -n "Activating miniconda environment..."
        source $INSTALL/miniconda2/bin/activate
        conda activate env27
        echo "done."
        rm -f $vini_dir/genes/cosmic_ids.csv $vini_dir/genes/expressions/* $vini_dir/genes/mutations/* $vini_dir/genes/sequences/* #cleanup

        cp $vini_dir/database/NCI-60_cell_lines/$cell_line/expressions/${cell_line}.csv $vini_dir/genes/expressions #as getting cell line expression file from COSMIC via API does not work, we are downloading it manually
        echo "Converting Uniprot IDs for ${cell_line} cell line to Cosmic gene IDs and calculating their average Z-score expressions..."
        echo "If successfull, the results will be saved in the $vini_dir/genes/expressions directory. Please wait, this may take a while..."
        python2 calculate_gene_expression_cell_line.py -g ./genes/Uniprot_ID_list -t ${cell_line}
        
        echo -n "Downloading  gene mutations for ${cell_line} cell line from Cosmic, please wait..."
        python2 get_gene_mutation_cell_line.py -g ./genes/Uniprot_ID_list -c $cell_line
        if  [ ! -e $vini_dir/genes/mutations/${cell_line}_mutations.csv ]
        then
            echo "failed to download mutations from Cosmic! Vini will stop now." exit
        else
            echo "success."
        fi

        python2 generateMutatedFASTAseqCellLine.py -g ./genes/Uniprot_ID_list
        echo "brakepoint" ; sleep 1000

        ls $vini_dir/genes/sequences > tmp
        if  [ ! -s tmp ]
        then
            echo "failed to get any sequence." ; exit
        fi



        if  [ $cosmic == y ]
        then
            sh predict_mutated_proteins ${cell_line}
        fi
        echo -n "Adding gene expressions to receptors and relations..."
        sh add_cell_expressions_to_receptors
        sh add_expressions_to_relations
        echo "done."
    fi

    if [ $kit == y ]
    then
        while read -r line
        do
            uniprotID=`echo $line | awk '{print $2}'`
            expression=`echo $line | awk '{print $3}'`
            echo $uniprotID
            echo $expression
            grep $uniprotID $WORKDIR/receptors_contracted > tmp
            if [ -s tmp ]
            then
                echo "gene found"
            else
                echo "gene not found" 
            fi
        done < $vini_dir/database/genes/custom_genes
    fi

    conda deactivate
    export PYTHONPATH=$STORE1 
    sh copy_genes_to_stage              #Copy pdb receptor files to the stage
    drugtype=`cat $WORKDIR/drugtype`
    if [ $drugtype == small ] ; then #create receptor pdbqt files
       sh $vini_dir/create_receptor_pdbqt_files
    fi
    complexes=`wc -l $WORKDIR/receptors_contracted | awk '{ print $1 }'`
    echo $complexes > $WORKDIR/complexes
fi

sh malavini 

end_date=`date`
echo "Analysis completed at"  $end_date
if  [ $compute_cell_line -eq $TRUE ]    #prepare the data for Pearson analysis
then 
    NCI60=`cat $WORKDIR/validate_NCI-60_data`
    if  [ $NCI60 == yes ]
    then
        echo "Validating results against NCI-60 data..."
        sh $vini_dir/validate_cell_line
    fi
fi

cd $WORKDIR #cleanup
rm -f postproc  ligand_???.pdbqt complex_???.jo*
rm -f ligands_list word temp_buf AD4_parameters.dat END receptors receptors_expanded
rm -f ligands target_dir stats prediction_list max_jobs
rm -f swiss_repo_entry *.pdb
rm -f  nodes tmp success Vina_run 
rm -f Vina.out stop accession_codes amber Chimera_failed_list clean_structures completeness_list
rm -f stop WM COSMIC_token *pdbqt drugname
rm -f job_status job_status job_cancel cores temp2_buf tmp prep_prot_lig.py
rm -f apolar compute_FBE create_index_file FBE g_mmpbsa_apolar_energy g_mmpbsa_polar_energy g_mmpbsa_potential_energy
rm -f compute_Gibbs MD_prep MD_run ndx polar apolar potential validate_NCI-60_data drugtype
rm -f mutated wild combo

cd $vini_dir
rm -f partition workdir tmp tmp2 genename get_cores GI50.csv ${cell_line}_GI50
rm -f seqnames predict exist tmp log ligand_wH.pdb #cleanup
