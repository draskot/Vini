echo " The VINI in silico model of cancer is supercomputing application  for computing the efficacy of existing drugs and their 2, 3, and 4 combinations."
echo "If using this program in your academic research , please cite:"                                                   #
echo " Tomic D., Skala K., Kranjcevic L., Pirkic B., Stifter S., et al. (2018) Evaluation of the Efficacy of Cancer Drugs by Using the Second Largest Eigenvalue of Metabolic Cancer Pathways. J Comput Sci Syst Biol 11: 240-248. doi:10.4172/jcsb.1000280"
echo ; sleep 1

HSA=hsa
ORGANISM=`cat $WORKDIR/ORGANISM`
cores=`cat $WORKDIR/cpu_cores`
job_submit=`cat $WORKDIR/job_submit`
compute_cell_line=`cat $WORKDIR/compute_cell_line`
cosmic=`cat $WORKDIR/cosmic`
kit=`cat $WORKDIR/kit`

TRUE=1
FALSE=0
if  [ $compute_cell_line -eq $TRUE ]
then
    cell_line=`cat $WORKDIR/cell_line`
fi
data="_data"
mkdir -p $vini_dir/database/KEGG_cancer_pathways

cancer_type=`cat $WORKDIR/cancer_type`          #getting cancer type from the preproc script
grep $cancer_type $vini_dir/database/cross_references > tmp
line=`cat tmp`
tissue=`echo $line | awk '{print $2}'`
CANCER_PATHWAY=$ORGANISM$cancer_type
mkdir -p $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY
sh download_KEGG_pathway

echo "Processing" $CANCER_PATHWAY "metabolic pathway" 
start_date=`date`
echo "Analysis of therapy level " $therapy_level "started at" $start_date
rm -f $WORKDIR/END


therapy_level=`cat $WORKDIR/therapy_level`
if  [ $therapy_level -eq 1 ]
then
    sh $vini_dir/create_mab_structures
    echo "brakepoint" ; sleep 1000
    sh create_relations_receptors_files #Creates relations, receptors and receptors_expanded files
    sh create_receptor_structures     #Create receptors_contracted file and molecular structures
    error=`cat $WORKDIR/error`
    if [ $error -eq $TRUE ] ; then    #exit if error has occured
       echo "The following structures failed to predict:"
       cat $WORKDIR/failed_structures
       exit
    fi
      
    STORE1=$PYTHONPATH ; unset PYTHONPATH  #calculate gene expressions
    eval "$(command conda 'shell.bash' 'hook' 2> /dev/null)"
    source $INSTALL/miniconda2/bin/activate
    conda activate env27
    if  [ $compute_cell_line -eq $FALSE ]     #then we analyse public data
    then
        if [ $cosmic == y ]
        then
            if  [ ! -e $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/expression_scores.csv ] #get expressions
            then
                sh get_gene_expressions_from_CosmicDB ${cores}
                $job_submit genex
                sh wait_until_jobs_finish ; rm genex.out
                    cp $vini_dir/database/genes/expression_scores.csv $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY
            else
                cp $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/expression_scores.csv $vini_dir/database/genes
            fi
            if  [ ! -d $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/mutations ] #get mutations/sequences
            then
                mkdir -p $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/mutations
                mkdir -p $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/sequences
                sh get_gene_mutations_from_CosmicDB
                #python generateMutatedFASTAseq.py #IN ERROR!
                cp $vini_dir/database/genes/mutations/* $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/mutations
                cp $vini_dir/database/genes/sequences/* $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/sequences
            else
                rm -f $vini_dir/database/genes/mutations/* $vini_dir/database/genes/sequences/*
                cp $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/mutations/* $vini_dir/database/genes/mutations
                cp $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/sequences/* $vini_dir/database/genes/sequences
            fi
        fi
        sh add_expressions_to_receptors
        sh add_expressions_to_relations
    else
        if  [[ ! -e $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/${cell_line}/expressions/${cell_line}.csv ]] || [[ ! -d $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/${cell_line}/mutations ]] || [[ ! -d $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/${cell_line}/sequences ]]
        then
            mkdir -p $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/$cell_line
            mkdir -p $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/$cell_line/expressions
            mkdir -p $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/$cell_line/mutations
            mkdir -p $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/$cell_line/sequences
            #sh calculate_gene_expression_cell_line #unable to get cell line expression file from COSMIC via API
            cp $vini_dir/database/NCI-60_cell_lines/$cell_line/expressions/${cell_line}.csv $vini_dir/database/genes/expressions/ #using preloaded file
            echo "getting mutations for" $cell_line ", please wait..."
            python get_gene_mutation_cell_line.py -g $vini_dir/database/genes/Uniprot_ID_list -c $cell_line
            python generateMutatedFASTAseqCellLine.py -g $vini_dir/database/genes/Uniprot_ID_list
            cp $vini_dir/database/genes/expressions/* $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/$cell_line/expressions
            cp $vini_dir/database/genes/mutations/* $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/$cell_line/mutations
            cp $vini_dir/database/genes/sequences/* $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/$cell_line/sequences
        else
            rm -f $vini_dir/database/genes/expressions/* $vini_dir/database/genes/mutations/* $vini_dir/database/genes/sequences/*
            cp $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/$cell_line/expressions/* $vini_dir/database/genes/expressions
            cp $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/$cell_line/mutations/* $vini_dir/database/genes/mutations
            cp $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/$cell_line/sequences/* $vini_dir/database/genes/sequences
        fi

        if  [ $cosmic == y ]
        then
            sh predict_mutated_proteins ${cell_line}
        fi
        echo -n "Adding gene expressions to receptors and relations..."
        sh add_cell_expressions_to_receptors
        sh add_expressions_to_relations
        echo "done."
    fi

    if [ $kit == y ]
    then
        while read -r line
        do
            uniprotID=`echo $line | awk '{print $2}'`
            expression=`echo $line | awk '{print $3}'`
            echo $uniprotID
            echo $expression
            grep $uniprotID $WORKDIR/receptors_contracted > tmp
            if [ -s tmp ]
            then
                echo "gene found"
            else
                echo "gene not found" 
            fi
        done < $vini_dir/database/genes/custom_genes
    fi

    conda deactivate
    export PYTHONPATH=$STORE1 
    sh copy_genes_to_stage              #Copy pdb receptor files to the stage
    drugtype=`cat $WORKDIR/drugtype`
    if [ $drugtype == small ] ; then #create receptor pdbqt files
       sh $vini_dir/create_receptor_pdbqt_files
    fi
    complexes=`wc -l $WORKDIR/receptors_contracted | awk '{ print $1 }'`
    echo $complexes > $WORKDIR/complexes
fi
sh vini 
end_date=`date`
echo "Analysis completed at"  $end_date
if  [ $compute_cell_line -eq $TRUE ]    #prepare the data for Pearson analysis
then 
    NCI60=`cat $WORKDIR/validate_NCI-60_data`
    if  [ $NCI60 == yes ]
    then
        echo "Validating results against NCI-60 data..."
        sh $vini_dir/validate_cell_line
    fi
fi

cd $WORKDIR #cleanup
rm -f postproc  ligand_???.pdbqt complex_???.jo* slurm-*.out *.err
rm -f ligands_list word temp_buf AD4_parameters.dat END receptors receptors_expanded url
rm -f ligands target_dir stats prediction_list max_jobs
rm -f swiss_repo_entry *.pdb
rm -f  nodes tmp success Vina_run 
rm -f Vina.out stop accession_codes amber Chimera_failed_list clean_structures completeness_list
rm -f stop WM COSMIC_token *pdbqt drugname failed_structures
rm -f job_status job_status job_cancel cores temp2_buf tmp prep_prot_lig.py
rm -f apolar compute_FBE create_index_file FBE g_mmpbsa_apolar_energy g_mmpbsa_polar_energy g_mmpbsa_potential_energy
rm -f compute_Gibbs MD_prep MD_run ndx polar apolar potential validate_NCI-60_data drugtype
rm -f alphafold*

while read -r line
do
    name=`echo $line | awk -F','  '{print $1}'`
    type=`echo $line | awk -F','  '{print $2}'`
    if [ $type == P ]
    then
        rm -rf $WORKDIR/$name
    fi
done < $vini_dir/database/ligands/ligands_list

cd $vini_dir
rm -f partition workdir tmp tmp2 genename get_cores GI50.csv ${cell_line}_GI50
rm -f wild mutated combo seqnames predict exist tmp log ligand_wH.pdb #cleanup
