HSA=hsa
ORGANISM=`cat $WORKDIR/ORGANISM`
partition=`cat $WORKDIR/cpu_partition`
cores=`cat $WORKDIR/${partition}_cores`
job_submit=`cat job_submit`
cosmic=`cat $WORKDIR/cosmic`
kit=`cat $WORKDIR/kit`
max_therapy_level=`cat $WORKDIR/max_therapy_level`
compute_cell_line=`cat $WORKDIR/compute_cell_line`
NCI60=`cat $WORKDIR/validate_NCI-60_data`

TRUE=1
FALSE=0
ONES=1

> $WORKDIR/missing_genes
> $WORKDIR/failed_predictions

rm -f $vini_dir/genes/cosmic_ids.csv

if  [ $compute_cell_line -eq $TRUE ]
then
    cell_line=`cat $WORKDIR/cell_line`
fi

data="_data"
mkdir -p $vini_dir/database/KEGG_cancer_pathways

cancer_type=`cat $WORKDIR/cancer_type`          #getting cancer type from the preproc script
mkdir -p $WORKDIR/${cancer_type}_data           #folder with an intermediate data
grep $cancer_type $vini_dir/database/cross_references > tmp
line=`cat tmp`
tissue=`echo $line | awk '{print $2}'`
CANCER_PATHWAY=$ORGANISM$cancer_type
mkdir -p $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY


sh download_KEGG_pathway

echo "Processing" $CANCER_PATHWAY "metabolic pathway" 
start_date=`date`
echo "Analysis started at ${start_date} "
rm -f $WORKDIR/END

sh $vini_dir/create_relations_receptors_files #create KEGG receptor structures
sh $vini_dir/create_receptor_structures

if  [ -s $WORKDIR/missing_genes ]
then
    echo "Cannot continue as the following KEGG genes are missing entry in Uniprot:"
    cat $WORKDIR/missing_genes
    echo "Find their fasta sequences at https://www.ncbi.nlm.nih.gov/ and predict their structures."
    echo "Then upload structures to $vini_dir/database/genes/pdb_files directory and start Vini again."
fi

if  [ -s $WORKDIR/failed_pubchem_structures ]
then
    echo "Cannot continue as Openbabel failed sdf to pdb conversion for the following KEGG substances:"
    cat $WORKDIR/failed_pubchem_structures              
    echo "You may try to convert them with Cactus server: https://cactus.nci.nih.gov/translate/"
    echo "Then upload these strucures to $vini_dir/database/genes/pdb_file directory and start Vini again."
    echo "Exiting." ; exit
fi

rm -f $vini_dir/genes/cosmic_ids.csv
rm -f $vini_dir/genes/expressions/* $vini_dir/genes/mutations/* $vini_dir/genes/sequences/* 

echo "Waiting for AlphaFold jobs to finish. This may take a while."
sh $vini_dir/predict_protein_drug_structures
sh $vini_dir/wait_until_jobs_finish
 


if  [ $compute_cell_line -eq $FALSE ]     #then we analyse public data
then
    if [ $cosmic == y ]
    then
        if  [ ! -e $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/expression_scores.csv ] #get expressions
        then
            sh get_gene_expressions_from_CosmicDB ${cores}
            $job_submit $WORKDIR/genex
            sh wait_until_jobs_finish ; rm $WORKDIR/genex.out
            cp $vini_dir/database/genes/expression_scores.csv $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY
        else
            cp $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/expression_scores.csv $vini_dir/database/genes
        fi
        if  [ ! -d $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/mutations ] #get mutations/sequences
        then
            mkdir -p $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/mutations
            mkdir -p $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/sequences
            sh get_gene_mutations_from_CosmicDB
            #python generateMutatedFASTAseq.py #IN ERROR!
            cp $vini_dir/database/genes/mutations/* $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/mutations
            cp $vini_dir/database/genes/sequences/* $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/sequences
        else
            rm -f $vini_dir/database/genes/mutations/* $vini_dir/database/genes/sequences/*
            cp $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/mutations/* $vini_dir/database/genes/mutations
            cp $vini_dir/database/KEGG_cancer_pathways/$CANCER_PATHWAY/sequences/* $vini_dir/database/genes/sequences
        fi
    fi
    sh add_expressions_to_receptors
    sh add_expressions_to_relations
else
    echo "cell line is ${cell_line} "

    cp $vini_dir/database/NCI-60_cell_lines/${cell_line}/expressions/${cell_line}.csv $vini_dir/genes/expressions #getting cell line expression file from COSMIC via API does not work, we are downloading it manually
    echo "Converting Uniprot IDs for ${cell_line} cell line to Cosmic gene IDs and calculating their average Z-score expressions..."
    rm -f $vini_dir/genes/cosmic_ids.csv
    echo -n "Activating miniconda3 environment..."
    source $INSTALL/miniconda3/bin/activate
    conda activate env310
    
    rm -f $vini_dir/genes/cosmic_ids.csv    

    echo -n "Calculating gene expressions, please wait..."
    python calculate_gene_expression_cell_line.py -g ./genes/Uniprot_ID_list -t ${cell_line}
    echo "done."

    cp $vini_dir/genes/cosmic_ids.csv $vini_dir/genes/cosmic_ids.csv.orig


    echo -n "Downloading  gene mutations for ${cell_line} cell line from Cosmic, please wait..."
    python get_gene_mutation_cell_line.py -g ./genes/Uniprot_ID_list -c ${cell_line}
    
    if  [ ! -e $vini_dir/genes/mutations/${cell_line}_mutations.csv ]
    then
        echo "Failed to get mutations for ${cell_line} cell line! Exiting" ; exit
    fi    

    echo -n "Generating  mutated fasta sequences for ${cell_line} cell line, please wait..."
    python generateMutatedFASTAseqCellLine.py -g ./genes/Uniprot_ID_list
    conda deactivate
    echo "done."

    ls $vini_dir/genes/sequences > tmp
    if  [ ! -s tmp ]
    then
        echo "failed to get any sequence." ; exit
    fi

    rm -f $WORKDIR/*err $WORKDIR/*out    
    if  [ $cosmic == y ]
    then
        sh $vini_dir/predict_mutated_genes
    fi


    echo -n "Adding gene expressions to receptors and relations..."
    sh add_cell_expressions_to_receptors
    sh add_expressions_to_relations
    echo "done."
fi


if [ $kit == y ]
then
    while read -r line
    do
        uniprotID=`echo $line | awk '{print $2}'`
        expression=`echo $line | awk '{print $3}'`
        echo $uniprotID
        echo $expression
        grep $uniprotID $WORKDIR/receptors_contracted > tmp
        if [ -s tmp ]
        then
            echo "gene found"
        else
            echo "gene not found" 
        fi
    done < $vini_dir/database/genes/custom_genes
fi

echo -n "Performing cleanup..."
while read -r line
do
    drug=`echo $line | awk -F',' '{print $1}'`
    type=`echo $line | awk -F',' '{print $2}'`
    if  [ $type == P ]
    then
        echo -n "."
        rm -f $WORKDIR/AlphaFold_${drug}
        rm -f $WORKDIR/${drug}.err $WORKDIR/${drug}.out
        rm -rf $WORKDIR/${drug}
    fi
done < $vini_dir/ligands/ligands_list

while read -r line
do
    receptor=`echo $line | awk '{print $3}'`
    state=`echo $line | awk '{print $5}'`
    if  [ $state == W ]
    then
        echo -n "."
        rm -f $WORKDIR/AlphaFold_${receptor}
        rm -f $WORKDIR/${receptor}.err $WORKDIR/${receptor}.out
        rm -rf $WORKDIR/${receptor}
    fi
done < $WORKDIR/receptors_contracted ; echo "done."

j=1
while  read -r line                                #Copy pdb receptor files to the stage
do
       printf -v i "%03d" $j
       gene=`echo $line | awk '{print $3}'` #get entry name
       cp $vini_dir/genes/pdb_files/${gene}.pdb $WORKDIR/${cancer_type}_data/complex_${i}.pdb
       let j++
done < $WORKDIR/receptors_contracted

i=1
while  read -r line                                               #Copy ligand files to the stage
do
    drug=`echo $line | awk -F',' '{print $1}'`
    type=`echo $line | awk -F',' '{print $2}'`
    printf -v lig_index "%03d" $i
    echo "copying "${drug}" structure to the stagging area."
    cp $vini_dir/ligands/pdb_files/"${drug}".pdb $WORKDIR/ligands/ligand_${lig_index}.pdb
    if  [ $type == S ]
    then
        obabel $vini_dir/ligands/pdb_files/"${drug}".pdb -opdbqt -O $WORKDIR/ligands/ligand_${lig_index}.pdbqt -p 7.4 -xr --partialcharge gasteiger
    fi

    let i++
done < $vini_dir/ligands/ligands_list


for (( therapy_level=1; therapy_level<$((max_therapy_level+1)); therapy_level++ ))
do
    echo $therapy_level > $WORKDIR/therapy_level
    sh $vini_dir/malavini
done

if  [[ ${compute_cell_line} -eq $TRUE ]] && [[ ${max_therapy_level} -eq $ONES ]]    #prepare the data for Pearson analysis
then 
    if  [ $NCI60 == yes ]
    then
        echo "Validating results against NCI-60 data..."
        sh $vini_dir/validate_cell_line
    fi
fi

cp $vini_dir/ligands/ligands_list.orig $vini_dir/ligands/ligands_list #returning the original list of drugs

end_date=`date`
echo "Analysis completed at"  $end_date
