cpus=$1
mem=$2
partition=$3
base=$4
model=$5
fasta_file=$6

antibody=`basename ${fasta_file} .fasta`

job_submit=`cat $WORKDIR/job_submit`
node_type=`cat $WORKDIR/AlphaFold_partition`
gpus=1                                                   #AlphaFold working with only 1 gpu

if [ $partition == cpu ]
then
    excluded_nodes=`cat $WORKDIR/excluded_cpu_nodes`
else
    
    excluded_nodes=`cat $WORKDIR/excluded_gpu_nodes`
fi

rm -rf $WORKDIR/${antibody} #cleanup

echo "#!/bin/bash"                                          > $WORKDIR/AlphaFold
echo "#SBATCH --nodes=1"                                   >> $WORKDIR/AlphaFold
echo "#SBATCH --ntasks-per-node=1"                         >> $WORKDIR/AlphaFold
echo "#SBATCH --cpus-per-task="$cpus                       >> $WORKDIR/AlphaFold
echo "#SBATCH --mem="$mem                                  >> $WORKDIR/AlphaFold
echo "#SBATCH --partition="$partition                      >> $WORKDIR/AlphaFold
echo "#SBATCH --exclusive"                                 >> $WORKDIR/AlphaFold
echo "#SBATCH --exclude=${excluded_nodes}"                 >> $WORKDIR/AlphaFold
echo "WORKDIR=${WORKDIR}"                                  >> $WORKDIR/AlphaFold
echo "#SBATCH --time=02-00:00:00"                          >> $WORKDIR/AlphaFold
echo "#SBATCH --job-name=A_"${antibody}                    >> $WORKDIR/AlphaFold
echo "#SBATCH --output=$WORKDIR/alphafold.${antibody}.out" >> $WORKDIR/AlphaFold
echo "#SBATCH --error=$WORKDIR/alphafold.${antibody}.err"  >> $WORKDIR/AlphaFold

if  [ ${node_type} == gpu ] ; then
    echo "#SBATCH --gres=gpu:$gpus"                         >> $WORKDIR/AlphaFold
fi

echo "python3 $AlphaFoldSTART --data-dir=$AlphaFoldBASE --fasta-paths=${fasta_file} --cpus=${cpus} --db-preset=${base} --model-preset=${model} --output-dir=$WORKDIR"                                        >> $WORKDIR/AlphaFold
chmod u+x                                                     $WORKDIR/AlphaFold

${job_submit} $WORKDIR/AlphaFold
