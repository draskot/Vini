cpus=$1
partition=$2
base=$3
fasta_file=$4
outdir=$5

ONES=1
maxlines1=23
maxlines2=40

model=`grep -c ">" ${fasta_file}`
if  [ $model -eq $ONES ]
then
    model=monomer
else
    model=multimer
fi

walltime=`sinfo | grep $partition | head -1 | awk '{print $3}'` #By default we are trying to run AF on cpu nodes
antibody=`basename ${fasta_file} .fasta`

nolines=`wc -l < ${fasta_file}`                     #Checking resources for large sequences
if  [[ $nolines -gt $maxlines1 ]] && [[ $nolines -le $maxlines2 ]]
then
    partition=`cat longcpu_partition`
    walltime=`sinfo | grep $partition | head -1 | awk '{print $3}'`
else
    if  [ $nolines -gt $maxlines2 ]
    then
        echo "Error while trying to predict $antibody structure with AlphaFold."                        Vini.crashlog
        echo "Running AlphaFold prediction on $partition node will exceed walltime limit of $walltime." Vini.crashlog
        echo "Consider to run AlphaFold prediction on GPU nodes."                                       Vini.crashlog
        echo ""                                                                                         Vini.crashlog
        scancel -u $USER
        masterpid=`cat $WORKDIR/masterpid`
        kill -P $masterpid
        kill -9 $masterpid
    fi
fi

job_submit=`cat job_submit`
gpus=1                                                   #AlphaFold working with only 1 gpu

excluded_nodes=`cat excluded_${partition}_nodes`

rm -rf $WORKDIR/${antibody} #cleanup

echo "#!/bin/bash"                                                   > $WORKDIR/AlphaFold_${antibody}
echo "#SBATCH --time=$walltime"                                     >> $WORKDIR/AlphaFold_${antibody}
echo "#SBATCH --job-name=$antibody"                                 >> $WORKDIR/AlphaFold_${antibody}
echo "#SBATCH --account=$SLURMACCT"                                 >> $WORKDIR/AlphaFold_${antibody}
echo "#SBATCH --exclusive"                                          >> $WORKDIR/AlphaFold_${antibody}
echo "#SBATCH --output=$WORKDIR/$antibody.out"                      >> $WORKDIR/AlphaFold_${antibody}
echo "#SBATCH --error=$WORKDIR/$antibody.err"                       >> $WORKDIR/AlphaFold_${antibody}
echo "#SBATCH --nodes=1"                                            >> $WORKDIR/AlphaFold_${antibody}
echo "#SBATCH --ntasks-per-node=1"                                  >> $WORKDIR/AlphaFold_${antibody}
echo "#SBATCH --cpus-per-task="$cpus                                >> $WORKDIR/AlphaFold_${antibody}
echo "#SBATCH --partition="$partition                               >> $WORKDIR/AlphaFold_${antibody}
echo "#SBATCH --exclude=${excluded_nodes}"                          >> $WORKDIR/AlphaFold_${antibody}

echo "WORKDIR=${WORKDIR}"                                           >> $WORKDIR/AlphaFold_${antibody}


if  [[ $partition == gpu ]] && [[ -e /etc/slurm/gres.conf ]]
then
    echo "#SBATCH --gres=gpu:1"                                     >> $WORKDIR/AlphaFold_${antibody}
fi

echo "source $INSTALL/miniconda3/bin/activate" >> $WORKDIR/AlphaFold_${antibody}
echo "conda activate env310"  >> $WORKDIR/AlphaFold_${antibody}

echo "alphafold --data_dir=${ALPHAFOLD_DATA_DIR} --fasta_paths=${fasta_file} --output_dir=${WORKDIR} --model_preset=${model} --db_preset=${base} --use_gpu_relax=False --num_multimer_predictions_per_model=1  --max_template_date=2020-06-05"                  >> $WORKDIR/AlphaFold_${antibody}

echo "conda deactivate"  >> $WORKDIR/AlphaFold_${antibody}

echo "if [ -e $WORKDIR/${antibody}/ranked_0.pdb ]"         >> $WORKDIR/AlphaFold_${antibody}
echo "then"                                                >> $WORKDIR/AlphaFold_${antibody}
echo "cp $WORKDIR/${antibody}/ranked_0.pdb $outdir/${antibody}.pdb" >> $WORKDIR/AlphaFold_${antibody}
echo "else"                                                >> $WORKDIR/AlphaFold_${antibody}
echo "echo ${antibody} > $WORKDIR/failed_predictions"      >> $WORKDIR/AlphaFold_${antibody}
echo "fi"                                                  >> $WORKDIR/AlphaFold_${antibody}

chmod u+x                                                  $WORKDIR/AlphaFold_${antibody}

${job_submit} $WORKDIR/AlphaFold_${antibody}
