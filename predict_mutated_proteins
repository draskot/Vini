#Using https://web.expasy.org/translate/ tool for nucleotide to aminoacids sequence translation

cell_line=$1

prediction_model=`cat $WORKDIR/prediction_model` #AlphaFold parameters
cpus=`cat $WORKDIR/AlphaFold_cpus`
mem=`cat $WORKDIR/AlphaFold_mem`
partition=`cat  $WORKDIR/AlphaFold_partition`
base=`cat $WORKDIR/AlphaFold_base`
model=monomer

SEQDIR=$vini_dir/database/genes/sequences/

echo -n "Translating nucleotide sequences to aminoacid sequences, please wait..." 
rm -f $vini_dir/database/genes/sequences/*csv

> $WORKDIR/mutated #create file with mutated gene names
> $WORKDIR/combo
ls $vini_dir/database/genes/sequences/*fasta > $WORKDIR/tmp 2>/dev/null
while read -r line              #DNA --> protein sequence translation
do
    uniprot_id=`basename ${line} .fasta`
    mutated_gene_name=${uniprot_id}-${cell_line}
    echo $mutated_gene_name >> $WORKDIR/mutated
    echo $uniprot_id $mutated_gene_name >> $WORKDIR/combo
    dnaseq=`cat $line`
    wget -O $SEQDIR${uniprot_id}.frame --post-data="dna_sequence=${dnaseq}&output_format=fasta" -q  https://web.expasy.org/cgi-bin/translate/dna2aa.cgi
    rm $SEQDIR/${uniprot_id}.fasta
    echo -n "."
done < $WORKDIR/tmp
echo "done."


python find_longest_frame.py --input-dir $SEQDIR #Finding longest ORFs (Open Reading Frames)

while read -r line #replacing wild genes with mutated in receptors_contracted file
do
    wild=`echo $line | awk '{print $1}'`
    mutated=`echo $line | awk '{print $2}'`
    mv $SEQDIR/${wild}.fasta $SEQDIR/${mutated}.fasta
    sed -i "s/$wild/$mutated/" $WORKDIR/receptors_contracted
done < $WORKDIR/combo


while read -r line
do
    if [ ! -e $vini_dir/database/genes/pdb_files/${line}.pdb ]
    then
        if  [ -e $vini_dir/database/NCI-60_cell_lines/${cell_line}/mutations/${line}.pdb ]
        then 
            cp $vini_dir/database/NCI-60_cell_lines/${cell_line}/mutations/${line}.pdb $vini_dir/database/genes/pdb_files
        else
            fasta_file=$vini_dir/database/genes/sequences/${line}.fasta
            if  [ ${prediction_model} == A ]
            then
                echo "Predicting mutated $line structure with AlphaFold."
                sh $vini_dir/predict_with_AlphaFold ${cpus} ${mem} ${partition} ${base} ${model} ${fasta_file}
            else
                echo "Predicting mutated $line structure with SWISS-MODEL."
                sh $vini_dir/predict_protein_structure_with_swiss_model ${fasta_file}
                cp $vini_dir/database/genes/pdb_files/${line}.pdb $vini_dir/database/NCI-60_cell_lines/${cell_line}/mutations
            fi
        fi
    fi
done < $WORKDIR/mutated

if  [ ${prediction_model} == A ]
then
    sh $vini_dir/wait_until_jobs_finish #wait and then copy gene structures if predicted with AlphaFold
    while read -r line    
    do
        if  [[ ! -e $vini_dir/database/NCI-60_cell_lines/${cell_line}/mutations/${line}.pdb ]] && [[ ! -e $vini_dir/database/genes/pdb_files/${line}.pdb ]]
        then
            uniprot_id=$line 
            cp $WORKDIR/${uniprot_id}/ranked_0.pdb $vini_dir/database/genes/pdb_files/${uniprot_id}.pdb
            cp $vini_dir/database/genes/pdb_files/${line}.pdb $vini_dir/database/NCI-60_cell_lines/${cell_line}/mutations
        fi
    done < $WORKDIR/mutated
fi
