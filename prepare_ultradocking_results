UDIR=$WORKDIR/ultradock_data
PDB=.pdb
NULL=0
neg=-

cp $UDIR/docking_pairs.tmp $UDIR/docking_pairs
#x=`wc -l < $UDIR/missing_structures` #delete faked entries from repository OBSOLETE, as we do not create them
#let "x++"
#for (( lineno=1; lineno<$x; lineno++ ))
#do
#    uniprot_id=`head -"$lineno" $UDIR/missing_structures | tail -1`
#    rm -f $vini_dir/genes/pdb_files/$uniprot_id$PDB
#done


printf "%s%s%s%s%s%s%s%s%s%s%s\n" "compound_name" " " "Uniprot_ID" " " "experimental_value" " " "computed_value" " " "absolute_error" " " "protein_structure" > $UDIR/data

lines=`wc -l < $UDIR/docking_pairs` 
let "lines++"
L=0
M=0
N=0
E_ERROR=P_ERROR=0
EXPERIMENTAL_VALUE=0 
E_COMPUTED_VALUE=0
P_COMPUTED_VALUE=0

echo -n "preparing final report, please wait"
for (( lineno=1; lineno<$lines; lineno++ ))
do
    echo -n "."
    line=`head -"$lineno" $UDIR/docking_pairs | tail -1`     #get ligand and protein name
    ligand_name=`echo $line | awk '{print $1}'`              
    receptor_name=`echo $line | awk '{print $2}'`
    experimental_value=`echo $line | awk '{print $3}'`         #convert to binding energy
    computed_value=`echo $line | awk '{print $4}'`         #convert to binding energy
    flag=`echo $line | awk '{print $5}'`         #convert to binding energy
    echo $experimental_value > ./tmp                            
    /usr/bin/python $vini_dir/convert_pkd_to_Gibbs.py
    experimental_value=`cat ./tmp`

    if  [ $flag == "F" ]                                         
    then
        computed_value=NA
        abs_error=NA    
        let "L++"
    else                                                                              #compute absolute error
        diff=`echo $experimental_value $computed_value | awk '{print $1 - $2}'` 
        echo $diff > ./tmp
        /usr/bin/python $vini_dir/compute_absolute_value.py
        abs_error=`cat ./tmp`

        if  [ $flag == "E" ]            #check if protein has structure
        then
            let "M++"          
            E_ERROR=`echo $E_ERROR $abs_error | awk '{print $1 + $2}'` #update global error
            E_COMPUTED_VALUE=`echo $E_COMPUTED_VALUE $computed_value | awk '{print $1 + $2}'`
            E_EXPERIMENTAL_VALUE=`echo $E_EXPERIMENTAL_VALUE $experimental_value | awk '{print $1 + $2}'`
        else
            let "N++"
            P_ERROR=`echo $P_ERROR $abs_error | awk '{print $1 + $2}'` #update global error
            P_COMPUTED_VALUE=`echo $P_COMPUTED_VALUE $computed_value | awk '{print $1 + $2}'`
            P_EXPERIMENTAL_VALUE=`echo $P_EXPERIMENTAL_VALUE $experimental_value | awk '{print $1 + $2}'`
        fi
    fi 
    printf "%s%s%s%s%s%s%s%s%s%s%s\n" "$ligand_name" " " "$receptor_name" " " "$experimental_value" " " "$computed_value" " " "$abs_error" " " "$flag" >> $UDIR/data
done

echo " " >> $UDIR/data

if  [ $M -gt $NULL ]
then
    e_mean_experimental_value=`echo $E_EXPERIMENTAL_VALUE $M | awk '{print $1 / $2}'`
    e_mean_computed_value=`echo $E_COMPUTED_VALUE $M | awk '{print $1 / $2}'`
    e_mean_absolute_error=`echo $E_ERROR $M | awk '{print $1 / $2}'` 
else
    M=0
    e_mean_experimental_value=NA
    e_mean_computed_value=NA
    e_mean_absolute_error=NA
fi

echo "done."

TOTAL=`echo $L $M $N | awk '{print $1 + $2 + $3}'`
echo "total_number_of_pairs_analysed:" $TOTAL >> $UDIR/data

echo "computed_number_of_pairs_with_experimentally_determined_protein_structure:" $M >> $UDIR/data
echo "mean_value_of_experimental_results:" $e_mean_experimental_value >> $UDIR/data
echo "mean_value_of_computed_results:" $e_mean_computed_value >> $UDIR/data

echo $e_mean_computed_value > ./tmp
/usr/bin/python $vini_dir/compute_absolute_value.py
e_mean_computed_value=`cat ./tmp`

echo $e_mean_experimental_value > ./tmp
/usr/bin/python $vini_dir/compute_absolute_value.py
e_mean_experimental_value=`cat ./tmp`

e_mean_absolute_error=`echo $e_mean_experimental_value $e_mean_computed_value | awk '{print $1 - $2}'`
echo $e_mean_absolute_error > ./tmp
/usr/bin/python $vini_dir/compute_absolute_value.py
e_mean_absolute_error=`cat ./tmp`

echo "mean_absolute_error:" $e_mean_absolute_error >> $UDIR/data

if  [ $N -gt $NULL ]
then
    p_mean_experimental_value=`echo $P_EXPERIMENTAL_VALUE $N | awk '{print $1 / $2}'`
    p_mean_computed_value=`echo $P_COMPUTED_VALUE $N | awk '{print $1 / $2}'`

    echo $p_mean_computed_value > ./tmp
    /usr/bin/python $vini_dir/compute_absolute_value.py
    p_mean_computed_value=`cat ./tmp`

    echo $p_mean_experimental_value > ./tmp
    /usr/bin/python $vini_dir/compute_absolute_value.py
    p_mean_experimental_value=`cat ./tmp`

    p_mean_absolute_error=`echo $p_mean_experimental_value $p_mean_computed_value | awk '{print $1 - $2}'` 

    echo $p_mean_absolute_error > ./tmp
    /usr/bin/python $vini_dir/compute_absolute_value.py
    p_mean_absolute_error=`cat ./tmp`
else
    N=0
    p_mean_experimental_value=NA
    p_mean_computed_value=NA
    p_mean_absolute_error=NA
fi
rm ./tmp

echo "" >> $UDIR/data

echo "computed_number_of_pairs_with_predicted_protein_structure:" $N >> $UDIR/data
echo "mean_value_of_experimental_results:" $p_mean_experimental_value >> $UDIR/data
echo "mean_value_of_computed_results:" $p_mean_computed_value >> $UDIR/data
echo "mean_absolute_error:" $p_mean_absolute_error >> $UDIR/data

echo "" >> $UDIR/data

echo "not_computed_number_of_pairs_(structure_prediction_failed):" $L >> $UDIR/data

tr -s " " < $UDIR/data | sed 's/ /,/g' > $UDIR/data.csv 
